workflows:
  # Build Android APK
  android-build:
    name: üì± Build Android APK
    instance_type: linux_x2
    max_build_duration: 60
    environment:
      android_signing:
        - keystore_reference
      groups:
        - google_play
      vars:
        PACKAGE_NAME: "com.eezybuild.app"
        GOOGLE_PLAY_TRACK: "internal"
      node: 18
    cache:
      cache_paths:
        - $HOME/.npm
        - node_modules
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: main
          include: true
          source: true
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: üì¶ Install dependencies
        script: |
          npm ci
          
      - name: üîß Build web assets
        script: |
          npm run build:prod
          
      - name: ‚ö° Sync Capacitor Android
        script: |
          npx cap sync android
          
      - name: üî® Set up keystore
        script: |
          echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
          
      - name: üèóÔ∏è Build Android APK
        script: |
          cd android
          ./gradlew assembleRelease
          
      - name: üìã Debug APK Info
        script: |
          APK_PATH=$(find android/app/build/outputs/apk -name "*.apk" | head -1)
          echo "APK found at: $APK_PATH"
          if [ -f "$APK_PATH" ]; then
            ls -la "$APK_PATH"
            aapt dump badging "$APK_PATH" | grep -E "(package|application-label|versionName|versionCode)"
          else
            echo "‚ùå APK not found"
            find android/app/build/outputs -name "*.apk" -o -name "*.aab"
          fi
          
    artifacts:
      - android/app/build/outputs/**/*.apk
      - android/app/build/outputs/**/*.aab
      - android/app/build/outputs/**/mapping.txt
      
    publishing:
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: $GOOGLE_PLAY_TRACK
        submit_as_draft: true

  # Build iOS IPA
  ios-build:
    name: üçé Build iOS IPA
    instance_type: mac_mini_m1
    max_build_duration: 60
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.eezybuild.app
      vars:
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
        BUNDLE_ID: "com.eezybuild.app"
        APP_ID: 1234567890 # Replace with your actual App Store Connect App ID
      xcode: latest
      node: 18
    cache:
      cache_paths:
        - $HOME/.npm
        - node_modules
        - ios/App/Pods
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: main
          include: true
          source: true
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: üì¶ Install dependencies
        script: |
          npm ci
          
      - name: üîß Build web assets
        script: |
          npm run build:prod
          
      - name: ‚ö° Sync Capacitor iOS
        script: |
          npx cap sync ios
          
      - name: üçé Set up CocoaPods
        script: |
          cd ios/App
          pod install
          
      - name: üîê Set up code signing
        script: |
          keychain initialize
          app-store-connect fetch-signing-files $BUNDLE_ID \
            --type IOS_APP_STORE \
            --create
          keychain add-certificates
          xcode-project use-profiles
          
      - name: üì± Increment build number
        script: |
          cd ios/App
          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-app-store-build-number "$APP_ID")
          agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
          
      - name: üèóÔ∏è Build iOS IPA
        script: |
          cd ios/App
          xcode-project build-ipa \
            --workspace "$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME" \
            --archive-flags "-destination 'generic/platform=iOS'" \
            --export-options-plist /tmp/ExportOptions.plist
            
      - name: üìã Debug IPA Info
        script: |
          IPA_PATH=$(find build/ios/ipa -name "*.ipa" | head -1)
          echo "IPA found at: $IPA_PATH"
          if [ -f "$IPA_PATH" ]; then
            ls -la "$IPA_PATH"
            unzip -l "$IPA_PATH" | head -20
          else
            echo "‚ùå IPA not found"
            find build -name "*.ipa"
          fi
          
    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/dsym/*.app.dSYM.zip
      - build/ios/xcarchive/*.xcarchive
      
    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        beta_groups:
          - App Store Connect Users
        submit_to_app_store: false

  # Development builds (unsigned)
  dev-build:
    name: üõ†Ô∏è Development Build
    instance_type: mac_mini_m1
    max_build_duration: 45
    environment:
      xcode: latest
      node: 18
    cache:
      cache_paths:
        - $HOME/.npm
        - node_modules
    triggering:
      events:
        - pull_request
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: üì¶ Install dependencies
        script: |
          npm ci
          
      - name: üîß Build web assets  
        script: |
          npm run build:dev
          
      - name: ‚ö° Sync Capacitor
        script: |
          npx cap sync
          
      - name: üß™ Run tests
        script: |
          npm run lint
          npm run type-check
          
      - name: üèóÔ∏è Build Android Debug
        script: |
          cd android
          ./gradlew assembleDebug
          
      - name: üèóÔ∏è Build iOS Debug  
        script: |
          cd ios/App
          pod install
          xcodebuild \
            -workspace App.xcworkspace \
            -scheme App \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 14' \
            build
            
    artifacts:
      - android/app/build/outputs/apk/debug/*.apk
