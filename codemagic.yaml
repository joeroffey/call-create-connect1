workflows:
  # Ultra Minimal Test - Step by step diagnosis
  minimal-test:
    name: 🧪 Ultra Minimal iOS Test
    instance_type: mac_mini_m1
    max_build_duration: 15
    environment:
      xcode: latest
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
          source: true
    scripts:
      - name: 🔍 Environment Check
        script: |
          echo "=== Environment Check ==="
          echo "macOS: $(sw_vers -productVersion)"
          echo "Xcode: $(xcodebuild -version)"
          echo "Swift: $(swift --version)"
          
      - name: 🧪 Test 1 - Hello World Swift
        script: |
          echo "=== Test 1: Hello World Swift ==="
          cat > hello.swift << 'EOF'
          import Foundation
          print("Hello from Codemagic!")
          EOF
          
          echo "Compiling hello.swift..."
          swiftc hello.swift -o hello
          echo "Running hello..."
          ./hello
          
      - name: 🧪 Test 2 - Basic iOS Project Check
        script: |
          echo "=== Test 2: Basic Project Check ==="
          cd ios-native/EezyBuild
          
          echo "Project structure:"
          ls -la EezyBuild/
          
          echo "Swift files found:"
          find EezyBuild/ -name "*.swift" -exec echo {} \;
          
          echo "Xcode project info:"
          xcodebuild -list -project EezyBuild.xcodeproj
          
      - name: 🧪 Test 3 - Swift File Syntax Check
        script: |
          echo "=== Test 3: Individual Swift File Syntax ==="
          cd ios-native/EezyBuild
          
          # Test the isolated test app first
          echo "Testing isolated TestApp.swift:"
          xcrun swift -frontend -parse EezyBuild/TestApp.swift -sdk $(xcrun --show-sdk-path --sdk iphonesimulator) || echo "❌ TestApp syntax error"
          
          # Test the main app file
          echo "Testing EezyBuildApp.swift:"
          xcrun swift -frontend -parse EezyBuild/EezyBuildApp.swift -sdk $(xcrun --show-sdk-path --sdk iphonesimulator) || echo "❌ EezyBuildApp syntax error"
          
      - name: 🧪 Test 4 - Compile Single File
        script: |
          echo "=== Test 4: Single File Compilation ==="
          cd ios-native/EezyBuild
          
          echo "Trying to compile TestApp.swift alone..."
          xcrun swiftc \
            -sdk $(xcrun --show-sdk-path --sdk iphonesimulator) \
            -target arm64-apple-ios15.0-simulator \
            EezyBuild/TestApp.swift \
            -o TestApp || echo "❌ TestApp compilation failed"
            
      - name: 🧪 Test 5 - Xcode Dry Run
        script: |
          echo "=== Test 5: Xcode Dry Run ==="
          cd ios-native/EezyBuild
          
          echo "Attempting xcodebuild dry-run..."
          timeout 30 xcodebuild \
            -project EezyBuild.xcodeproj \
            -scheme EezyBuild \
            -sdk iphonesimulator \
            -configuration Debug \
            -dry-run \
            CODE_SIGNING_ALLOWED=NO || echo "❌ Dry-run failed"
          
    artifacts:
      - hello
      - ios-native/EezyBuild/TestApp

  # Only if above succeeds
  ios-diagnosis:
    name: 🔍 iOS Build Diagnosis
    instance_type: mac_mini_m1
    max_build_duration: 20
    environment:
      xcode: latest
    # No automatic triggers; run manually from the UI.
    scripts:
      - name: 🧪 Gradual Build Test
        script: |
          echo "=== Gradual Build Test ==="
          cd ios-native/EezyBuild
          
          echo "Step 1: Clean only..."
          xcodebuild clean -project EezyBuild.xcodeproj -scheme EezyBuild || echo "❌ Clean failed"
          
          echo "Step 2: Build settings check..."
          xcodebuild -project EezyBuild.xcodeproj -target EezyBuild -showBuildSettings | head -20
          
          echo "Step 3: Try minimal build with maximum safety..."
          timeout 120 xcodebuild build \
            -project EezyBuild.xcodeproj \
            -scheme EezyBuild \
            -sdk iphonesimulator \
            -configuration Debug \
            -destination 'platform=iOS Simulator,name=iPhone 14' \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            SWIFT_COMPILATION_MODE=singlefile \
            GCC_OPTIMIZATION_LEVEL=0 \
            SWIFT_OPTIMIZATION_LEVEL=-Onone \
            DEBUG_INFORMATION_FORMAT=dwarf \
            ONLY_ACTIVE_ARCH=YES \
            ENABLE_TESTING_SEARCH_PATHS=NO || echo "❌ Build failed with segfault likely"
            
    artifacts:
      - ios-native/EezyBuild/build/**/*

  ios-release:
    name: "📦 iOS Release IPA"
    instance_type: mac_mini_m1
    max_build_duration: 60
    environment:
      xcode: latest
      cocoapods: default
      vars:
        APP_STORE_CONNECT_ISSUER_ID: Encrypted(...)
        APP_STORE_CONNECT_KEY_ID: Encrypted(...)
        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(...)
        APPLE_TEAM_ID: YOUR_TEAM_ID
        BUNDLE_ID: com.lovable.callcreateconnect
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: main
          include: true
          source: true

    scripts:
      - name: "🔧 Install JS deps & build web"
        script: |
          npm ci --prefer-offline --no-audit --progress=false
          npm run build
          npx cap sync ios

      - name: "📦 Install CocoaPods"
        script: |
          cd ios
          pod install --repo-update

      - name: "🛠  Xcode archive"
        script: |
          xcodebuild \
            -workspace ios/App/App.xcworkspace \
            -scheme App \
            -configuration Release \
            -sdk iphoneos \
            -archivePath $CM_BUILD_DIR/App.xcarchive \
            DEVELOPMENT_TEAM="$APPLE_TEAM_ID" \
            PROVISIONING_PROFILE_SPECIFIER="" \
            CODE_SIGN_STYLE="Automatic" \
            clean archive

      - name: "🚀 Export IPA"
        script: |
          xcodebuild -exportArchive \
            -archivePath $CM_BUILD_DIR/App.xcarchive \
            -exportPath $CM_BUILD_DIR/ipa \
            -allowProvisioningUpdates \
            -exportOptionsPlist ios/App/ExportOptions.plist

    artifacts:
      - $CM_BUILD_DIR/ipa/*.ipa

    publishing:
      app_store_connect:
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        key_id: $APP_STORE_CONNECT_KEY_ID
        private_key: $APP_STORE_CONNECT_PRIVATE_KEY
        submit_to_testflight: true
