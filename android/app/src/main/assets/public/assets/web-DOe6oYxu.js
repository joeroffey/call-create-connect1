var i=(i,t,n)=>new Promise((e,o)=>{var s=i=>{try{a(n.next(i))}catch(t){o(t)}},r=i=>{try{a(n.throw(i))}catch(t){o(t)}},a=i=>i.done?e(i.value):Promise.resolve(i.value).then(s,r);a((n=n.apply(i,t)).next())});import{W as t}from"./index-Dn59gOu4.js";import"./ui-CsvuV3K5.js";import"./vendor-lUEIvSUi.js";import"./router-Bq3F0u5g.js";import"./supabase-C2sM_OHe.js";class n extends t{constructor(){super(...arguments),this.pending=[],this.deliveredNotifications=[],this.hasNotificationSupport=()=>{if(!("Notification"in window)||!Notification.requestPermission)return!1;if("granted"!==Notification.permission)try{new Notification("")}catch(i){if("TypeError"==i.name)return!1}return!0}}getDeliveredNotifications(){return i(this,null,function*(){const i=[];for(const t of this.deliveredNotifications){const n={title:t.title,id:parseInt(t.tag),body:t.body};i.push(n)}return{notifications:i}})}removeDeliveredNotifications(t){return i(this,null,function*(){for(const i of t.notifications){const t=this.deliveredNotifications.find(t=>t.tag===String(i.id));null==t||t.close(),this.deliveredNotifications=this.deliveredNotifications.filter(()=>!t)}})}removeAllDeliveredNotifications(){return i(this,null,function*(){for(const i of this.deliveredNotifications)i.close();this.deliveredNotifications=[]})}createChannel(){return i(this,null,function*(){throw this.unimplemented("Not implemented on web.")})}deleteChannel(){return i(this,null,function*(){throw this.unimplemented("Not implemented on web.")})}listChannels(){return i(this,null,function*(){throw this.unimplemented("Not implemented on web.")})}schedule(t){return i(this,null,function*(){if(!this.hasNotificationSupport())throw this.unavailable("Notifications not supported in this browser.");for(const i of t.notifications)this.sendNotification(i);return{notifications:t.notifications.map(i=>({id:i.id}))}})}getPending(){return i(this,null,function*(){return{notifications:this.pending}})}registerActionTypes(){return i(this,null,function*(){throw this.unimplemented("Not implemented on web.")})}cancel(t){return i(this,null,function*(){this.pending=this.pending.filter(i=>!t.notifications.find(t=>t.id===i.id))})}areEnabled(){return i(this,null,function*(){const{display:i}=yield this.checkPermissions();return{value:"granted"===i}})}changeExactNotificationSetting(){return i(this,null,function*(){throw this.unimplemented("Not implemented on web.")})}checkExactNotificationSetting(){return i(this,null,function*(){throw this.unimplemented("Not implemented on web.")})}requestPermissions(){return i(this,null,function*(){if(!this.hasNotificationSupport())throw this.unavailable("Notifications not supported in this browser.");return{display:this.transformNotificationPermission(yield Notification.requestPermission())}})}checkPermissions(){return i(this,null,function*(){if(!this.hasNotificationSupport())throw this.unavailable("Notifications not supported in this browser.");return{display:this.transformNotificationPermission(Notification.permission)}})}transformNotificationPermission(i){switch(i){case"granted":return"granted";case"denied":return"denied";default:return"prompt"}}sendPending(){var i;const t=[],n=(new Date).getTime();for(const e of this.pending)(null===(i=e.schedule)||void 0===i?void 0:i.at)&&e.schedule.at.getTime()<=n&&(this.buildNotification(e),t.push(e));this.pending=this.pending.filter(i=>!t.find(t=>t===i))}sendNotification(i){var t;if(null===(t=i.schedule)||void 0===t?void 0:t.at){const t=i.schedule.at.getTime()-(new Date).getTime();return this.pending.push(i),void setTimeout(()=>{this.sendPending()},t)}this.buildNotification(i)}buildNotification(i){const t=new Notification(i.title,{body:i.body,tag:String(i.id)});return t.addEventListener("click",this.onClick.bind(this,i),!1),t.addEventListener("show",this.onShow.bind(this,i),!1),t.addEventListener("close",()=>{this.deliveredNotifications=this.deliveredNotifications.filter(()=>!this)},!1),this.deliveredNotifications.push(t),t}onClick(i){const t={actionId:"tap",notification:i};this.notifyListeners("localNotificationActionPerformed",t)}onShow(i){this.notifyListeners("localNotificationReceived",i)}}export{n as LocalNotificationsWeb};
