var e=(e,t,s)=>new Promise((n,a)=>{var r=e=>{try{o(s.next(e))}catch(t){a(t)}},i=e=>{try{o(s.throw(e))}catch(t){a(t)}},o=e=>e.done?n(e.value):Promise.resolve(e.value).then(r,i);o((s=s.apply(e,t)).next())});import{W as t}from"./index-Dn59gOu4.js";import"./ui-CsvuV3K5.js";import"./vendor-lUEIvSUi.js";import"./router-Bq3F0u5g.js";import"./supabase-C2sM_OHe.js";class s extends t{isEnabled(){return e(this,null,function*(){throw this.unavailable("This feature is not available in the browser.")})}speak(t){return e(this,null,function*(){if(!("speechSynthesis"in window))throw this.unavailable("Browser does not support the SpeechSynthesis API");const e=new SpeechSynthesisUtterance(t.value);t.language&&(e.lang=t.language),speechSynthesis.speak(e)})}}export{s as ScreenReaderWeb};
